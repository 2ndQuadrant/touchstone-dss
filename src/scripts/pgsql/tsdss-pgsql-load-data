#!/bin/sh
#
# Copyright 2016 PostgreSQL Global Development Group
#

usage() {
	echo "Usage: `basename $0` <options>"
	echo
	echo "Options:"
	echo "  -C <int>   Number of sales data file segments to generate, default 1"
	echo "  -i <path>  Path to generate data files"
	echo "  -L         Enable Linux perf profiling"
	echo "  -o <path>  Path to save results"
}

constrain_sales_product()
{
	TABLE=$1

	if [ $LINUXPERF -eq 1 ]; then
		local CMD="$PERFCOMMAND -o $PERFDIR/perf-$TABLE-product-fk.data"
	fi
	$CMD $PSQL <<- __EOF__
		ALTER TABLE $TABLE
		ADD FOREIGN KEY (product_id)
		REFERENCES product (id);
	__EOF__
	RC=$?
	if [ $RC -ne 0 ]; then
		echo "error creating $TABLE/product fk: $RC"
		exit 1
	fi
}

constrain_sales_store()
{
	TABLE=$1

	if [ $LINUXPERF -eq 1 ]; then
		local CMD="$PERFCOMMAND -o $PERFDIR/perf-$TABLE-store-fk.data"
	fi
	$CMD $PSQL <<- __EOF__
		ALTER TABLE $TABLE
		ADD FOREIGN KEY (store_id)
		REFERENCES store (id);
	__EOF__
	RC=$?
	if [ $RC -ne 0 ]; then
		echo "error creating $TABLE/store fk: $RC"
		exit 1
	fi
}

constrain_sales_time()
{
	TABLE=$1

	if [ $LINUXPERF -eq 1 ]; then
		local CMD="$PERFCOMMAND -o $PERFDIR/perf-$TABLE-time-fk.data"
	fi
	$CMD $PSQL <<- __EOF__
		ALTER TABLE $TABLE
		ADD FOREIGN KEY (time_id)
		REFERENCES time (id);
	__EOF__
	RC=$?
	if [ $RC -ne 0 ]; then
		echo "error creating $TABLE/time fk: $RC"
		exit 1
	fi
}

constrain_sales()
{
	local PIDS=""

	if [ "x$PG_PARTITION" = "xinheritance" ]; then
		for FILE in `ls $DATAFILE_PATH/sales-*.data`; do
			local TABLE=`basename ${FILE%.*} | sed -e 's/-/_/g'`

			constrain_sales_product $TABLE &
			PIDS="$PIDS $!"
			constrain_sales_store $TABLE &
			PIDS="$PIDS $!"
			constrain_sales_time $TABLE &
			PIDS="$PIDS $!"
		done
	else
		constrain_sales_product sales &
		PIDS="$PIDS $!"
		constrain_sales_store sales &
		PIDS="$PIDS $!"
		constrain_sales_time sales &
		PIDS="$PIDS $!"
	fi

	for P in $PIDS; do
		wait $P
		if [ $? -ne 0 ]; then
			exit 1
		fi
	done
}

load_sales_inheritance()
{
	local FILE=$1
	local TABLE=$2

	if [ $LINUXPERF -eq 1 ]; then
		local CMD="$PERFCOMMAND -o $PERFDIR/perf-$TABLE.data"
	fi

	$CMD $PSQL <<- __EOF__
		BEGIN;
		TRUNCATE $TABLE;
		COPY $TABLE FROM '$FILE';
		COMMIT;
	__EOF__
	RC=$?
	if [ $RC -ne 0 ]; then
		echo "error loading $TABLE: $RC"
		exit 1
	fi
}

load_table()
{
	table=${1}
	file=${table}.data

	local PID=""

	if [ $CHUNKS -eq 1 ] || [ "$table" = "product" ] || \
			[ "$table" = "store" ] || [ "$table" = "time" ]; then
		if [ $LINUXPERF -eq 1 ]; then
			local CMD="$PERFCOMMAND -o $PERFDIR/perf-$table.data"
		fi
		$CMD $PSQL <<- __EOF__
			BEGIN;
			TRUNCATE $table;
			COPY $table FROM '$DATAFILE_PATH/$file';
			COMMIT;
		__EOF__
		RC=$?
		if [ $RC -ne 0 ]; then
			echo "error loading $table: $RC"
			exit 1
		fi
	else
		i=1
		while [ $i -le $CHUNKS ]; do
			if [ $LINUXPERF -eq 1 ]; then
				local CMD="$PERFCOMMAND -o $PERFDIR/perf-$table-$i.data"
			fi
			$CMD $PSQL <<- __EOF__ &
				COPY $table FROM '$DATAFILE_PATH/$file.$i' ;
			__EOF__
			PID="$PID $!"
			i=$(( $i + 1 ))
		done
	fi

	for P in $PID; do
		wait $P
		if [ $? -ne 0 ]; then
			exit 1
		fi
	done
}

load_product()
{
	load_table product

	$PSQL <<- __EOF__ &
		ALTER TABLE product
		ADD CONSTRAINT pk_product
		PRIMARY KEY (id);
	__EOF__

	wait $!
	if [ $? -ne 0 ]; then
		exit 1
	fi

	$PSQL -c "VACUUM ANALYZE product;"
}

load_sales()
{
	if [ "x$PG_PARTITION" = "xinheritance" ]; then
		local PIDS=""
		for FILE in `ls $DATAFILE_PATH/sales-*.data`; do
			local TABLE=`basename ${FILE%.*} | sed -e 's/-/_/g'`
			load_sales_inheritance $FILE $TABLE &
			PIDS="$PIDS $!"
		done

		for P in $PIDS; do
			wait $P
			if [ $? -ne 0 ]; then
				exit 1
			fi
		done
	else
		load_table sales
	fi

	$PSQL -c "VACUUM ANALYZE sales;"
}

load_store()
{
	load_table store

	$PSQL <<- __EOF__ &
		ALTER TABLE store
		ADD CONSTRAINT pk_store
		PRIMARY KEY (id);
	__EOF__

	wait $!
	if [ $? -ne 0 ]; then
		exit 1
	fi

	$PSQL -c "VACUUM ANALYZE store;"
}

load_time()
{
	load_table time

	$PSQL <<- __EOF__ &
		ALTER TABLE time
		ADD CONSTRAINT pk_time
		PRIMARY KEY (id);
	__EOF__

	wait $!
	if [ $? -ne 0 ]; then
		exit 1
	fi

	$PSQL -c "VACUUM ANALYZE time;"
}

CHUNKS=1
DATAFILE_PATH="."
LINUXPERF=0
OUTDIR="."
PERFCOMMAND=""
PERFDIR=""
while getopts "C:hi:Lo:" OPT; do
	case $OPT in
	C)
		CHUNKS=$OPTARG
		;;
	h)
		usage
		exit 0
		;;
	i)
		DATAFILE_PATH=$OPTARG
		;;
	L)
		LINUXPERF=1
		PERFCOMMAND="perf record -a -g -s"
		;;
	o)
		OUTDIR="$OPTARG"
		mkdir -p $OUTDIR
		;;
	esac
done

PSQL="psql -v ON_ERROR_STOP=1 -X"

if [ $LINUXPERF -eq 1 ]; then
	PERFDIR="$OUTDIR/perf"
	mkdir -p $PERFDIR
fi

load_sales &
PID=$!
load_product &
PID="$PID $!"
load_store &
PID="$PID $!"
load_time &
PID="$PID $!"

for P in $PID; do
	wait $P
	if [ $? -ne 0 ]; then
		exit 1
	fi
done

constrain_sales

exit 0
