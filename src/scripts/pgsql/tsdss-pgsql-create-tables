#!/bin/sh
#
# Copyright 2017 PostgreSQL Global Development Group
#

usage() {
	echo "Usage: `basename $0` <options>"
	echo
	echo "Options:"
	echo "  -g         Flag to generate datafiles for table partitioning"
	echo "  -y <int>   Number of years of data that will be generated"
}

create_partition() {
	Y=0
	while [ $Y -lt $YEARS ]; do
		M=0
		while [ $M -lt 12 ]; do
			YEAR=$(( 2001 + $Y))
			MONTH=$(( $M + 1))
			TABLENAME="sales_${YEAR}_${MONTH}"

			TIME0=`$PSQL -c "SELECT EXTRACT(EPOCH FROM '$YEAR-$MONTH-01'::DATE);"`
			TIME1=`$PSQL -c "SELECT EXTRACT(EPOCH FROM '$YEAR-$MONTH-01'::DATE + INTERVAL '1' MONTH);"`

			if [ "x$PG_PARTITION" = "xinheritance" ]; then
				$PSQL <<- __EOF__
					CREATE TABLE $TABLENAME (
						CHECK (time_id >= $TIME0 AND time_id < $TIME1)
					) INHERITS (sales);
				__EOF__

				if [ $GENERATE_DATA -eq 1 ]; then
					for FILE in `ls $DATAFILE_PATH/sales.data*`; do
						awk "(\$3 >= $TIME0 && \$3 < $TIME1) {print}" $FILE \
								>> $DATAFILE_PATH/sales-$YEAR-$MONTH.data
					done
				fi
			elif [ "x$PG_PARTITION" = "xnative" ]; then
				$PSQL <<- __EOF__
					CREATE TABLE $TABLENAME
					PARTITION OF sales
					FOR VALUES FROM ($TIME0) TO ($TIME1);
				__EOF__
			fi

			M=$(( $M + 1 ))
		done
		Y=$(( $Y + 1 ))
	done
}

DATAFILE_PATH=""
GENERATE_DATA=0
YEARS=""
while getopts "ghi:y:" OPT; do
	case $OPT in
	g)
		GENERATE_DATA=1
		;;
	h)
		usage
		exit 0
		;;
	i)
		DATAFILE_PATH=$OPTARG
		;;
	y)
		YEARS=$OPTARG
		;;
	esac
done

PSQL="psql -v ON_ERROR_STOP=1 -X -t --no-align"

$PSQL <<- __EOF__
CREATE TABLE product (
    id BIGINT NOT NULL,
    ean CHAR(13) NOT NULL,
    name CHAR(20) NOT NULL,
    brand CHAR(20) NOT NULL,
    category CHAR(20) NOT NULL
);

CREATE TABLE store (
    id BIGINT NOT NULL,
    store_number BIGINT NOT NULL,
    state VARCHAR(14) NOT NULL,
    state_abbr CHAR(2) NOT NULL
);

CREATE TABLE time (
    id DATE NOT NULL,
    day SMALLINT NOT NULL,
    day_of_week SMALLINT NOT NULL,
    month SMALLINT NOT NULL,
    month_name VARCHAR(9) NOT NULL,
    quarter SMALLINT NOT NULL,
    quarter_name CHAR(2) NOT NULL,
    year SMALLINT NOT NULL
);
__EOF__
RC=$?
if [ $RC -ne 0 ]; then
	echo "ERROR: creating tables $RC"
	exit 1
fi

SQL_SALES="CREATE TABLE sales (
    product_id BIGINT NOT NULL,
    store_id BIGINT NOT NULL,
    time_id DATE NOT NULL,
	ts TIMESTAMP WITH TIME ZONE,
    units INTEGER NOT NULL,
    unit_price NUMERIC NOT NULL,
    vat NUMERIC NOT NULL
)"

if [ "x$PG_PARTITION" = "xnative" ]; then
	$PSQL <<- __EOF__
		$SQL_SALES PARTITION BY RANGE (time_id);
		__EOF__
	RC=$?
else
	$PSQL <<- __EOF__
		$SQL_SALES;
	__EOF__
	RC=$?
fi
if [ $RC -ne 0 ]; then
	echo "ERROR: creating sales table $RC"
	exit 1
fi

if [ -n "$PG_PARTITION" ]; then
	if [ -z "$YEARS" ]; then
		echo "ERROR: Expected years of data must be specified with -y"
		exit 1
	fi

	if [ "x$PG_PARTITION" = "xinheritance" ] || \
			[ "x$PG_PARTITION" = "xnative" ]; then
		create_partition
	else
		echo "ERROR: Unknown partitioning scheme: $PG_PARTITION"
		exit 1
	fi
fi

exit 0
